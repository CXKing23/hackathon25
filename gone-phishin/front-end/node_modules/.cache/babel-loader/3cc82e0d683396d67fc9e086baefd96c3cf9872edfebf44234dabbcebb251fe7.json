{"ast":null,"code":"var _jsxFileName = \"/Users/mustafa/Documents/hackathon25/gone-phishin/front-end/src/EmailScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Logo from \"./Logo.png\"; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailScanner = () => {\n  _s();\n  const [subject, setSubject] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleScan = async () => {\n    // You’ll call your backend API here later\n    setIsLoading(true);\n    setIsSpinning(true);\n    const isPhishing = body.toLowerCase().includes(\"free money\");\n    setResult(isPhishing ? \"⚠️ Phishing detected!\" : \"✅ Looks safe.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Logo\n      //alt=\" Logo\"\n      ,\n      className: `Logo ${isSpinning ? \"spin\" : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Subject\",\n      onChange: e => setSubject(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Body\",\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScan,\n      children: \"Scan Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailScanner, \"5JCx3XgSevZzCHNwGtGmDzLcJGU=\");\n_c = EmailScanner;\nexport default EmailScanner;\nvar _c;\n$RefreshReg$(_c, \"EmailScanner\");","map":{"version":3,"names":["React","useState","Logo","jsxDEV","_jsxDEV","EmailScanner","_s","subject","setSubject","body","setBody","result","setResult","isSpinning","setIsSpinning","isLoading","setIsLoading","handleScan","isPhishing","toLowerCase","includes","children","src","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/mustafa/Documents/hackathon25/gone-phishin/front-end/src/EmailScanner.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Logo from \"./Logo.png\"; // Adjust the path as needed\n\nconst EmailScanner = () => {\n  const [subject, setSubject] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleScan = async () => {\n    // You’ll call your backend API here later\n    setIsLoading(true);\n    setIsSpinning(true);\n\n\n    const isPhishing = body.toLowerCase().includes(\"free money\");\n    setResult(isPhishing ? \"⚠️ Phishing detected!\" : \"✅ Looks safe.\");\n  };\n\n  return (\n    <div>\n      <img\n        src = {Logo}\n        //alt=\" Logo\"\n        className={`Logo ${isSpinning ? \"spin\" : \"\"}`}\n      />\n        <h2>Email Scanner</h2>\n      <input placeholder=\"Subject\" onChange={(e) => setSubject(e.target.value)} />\n      <textarea placeholder=\"Body\" onChange={(e) => setBody(e.target.value)} />\n      <button onClick={handleScan}>Scan Email</button>\n      <p>{result}</p>\n    </div>\n  );\n};\n\nexport default EmailScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACAD,YAAY,CAAC,IAAI,CAAC;IAClBF,aAAa,CAAC,IAAI,CAAC;IAGnB,MAAMI,UAAU,GAAGT,IAAI,CAACU,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,YAAY,CAAC;IAC5DR,SAAS,CAACM,UAAU,GAAG,uBAAuB,GAAG,eAAe,CAAC;EACnE,CAAC;EAED,oBACEd,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MACEkB,GAAG,EAAIpB;MACP;MAAA;MACAqB,SAAS,EAAE,QAAQV,UAAU,GAAG,MAAM,GAAG,EAAE;IAAG;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACAvB,OAAA;MAAAiB,QAAA,EAAI;IAAa;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBvB,OAAA;MAAOwB,WAAW,EAAC,SAAS;MAACC,QAAQ,EAAGC,CAAC,IAAKtB,UAAU,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5EvB,OAAA;MAAUwB,WAAW,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKpB,OAAO,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzEvB,OAAA;MAAQ6B,OAAO,EAAEhB,UAAW;MAAAI,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChDvB,OAAA;MAAAiB,QAAA,EAAIV;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACrB,EAAA,CA9BID,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}