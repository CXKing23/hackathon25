{"ast":null,"code":"var _jsxFileName = \"/Users/mustafa/Documents/hackathon25/gone-phishin/front-end/src/EmailScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//import Logo from \"./Logo.png\"; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailScanner = () => {\n  _s();\n  const [subject, setSubject] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleScan = async () => {\n    // You’ll call your backend API here later\n    setIsLoading(true);\n    setIsSpinning(true);\n\n    // Simulate a delay for the loading state (e.g., 2 seconds)\n    setTimeout(() => {\n      const isPhishing = body.toLowerCase().includes(\"free money\");\n      setResult(isPhishing ? \"⚠️ Phishing detected!\" : \"✅ Looks safe.\");\n      setIsLoading(false); // Hide \"Loading...\" text\n      setIsSpinning(false); // Stop spinning the logo\n    }, 2000); // Adjust the delay as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: Logo,\n      alt: \" Logo\",\n      className: `Logo ${isSpinning ? \"spin\" : \"\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Email Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Subject\",\n      onChange: e => setSubject(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Body\",\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleScan,\n      children: \"Scan Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailScanner, \"5JCx3XgSevZzCHNwGtGmDzLcJGU=\");\n_c = EmailScanner;\nexport default EmailScanner;\nvar _c;\n$RefreshReg$(_c, \"EmailScanner\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","EmailScanner","_s","subject","setSubject","body","setBody","result","setResult","isSpinning","setIsSpinning","isLoading","setIsLoading","handleScan","setTimeout","isPhishing","toLowerCase","includes","children","src","Logo","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/mustafa/Documents/hackathon25/gone-phishin/front-end/src/EmailScanner.js"],"sourcesContent":["import React, { useState } from \"react\";\n//import Logo from \"./Logo.png\"; // Adjust the path as needed\n\nconst EmailScanner = () => {\n  const [subject, setSubject] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [isSpinning, setIsSpinning] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleScan = async () => {\n    // You’ll call your backend API here later\n    setIsLoading(true);\n    setIsSpinning(true);\n\n      // Simulate a delay for the loading state (e.g., 2 seconds)\n  setTimeout(() => {\n    const isPhishing = body.toLowerCase().includes(\"free money\");\n    setResult(isPhishing ? \"⚠️ Phishing detected!\" : \"✅ Looks safe.\");\n    setIsLoading(false); // Hide \"Loading...\" text\n    setIsSpinning(false); // Stop spinning the logo\n  }, 2000); // Adjust the delay as needed\n}\n\n\n  return (\n    <div>\n      <img\n        src = {Logo}\n        alt=\" Logo\"\n        className={`Logo ${isSpinning ? \"spin\" : \"\"}`}\n      />\n        <h2>Email Scanner</h2>\n      <input placeholder=\"Subject\" onChange={(e) => setSubject(e.target.value)} />\n      <textarea placeholder=\"Body\" onChange={(e) => setBody(e.target.value)} />\n      <button onClick={handleScan}>Scan Email</button>\n      <p>{result}</p>\n    </div>\n  );\n};\n\nexport default EmailScanner;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACAD,YAAY,CAAC,IAAI,CAAC;IAClBF,aAAa,CAAC,IAAI,CAAC;;IAEjB;IACJI,UAAU,CAAC,MAAM;MACf,MAAMC,UAAU,GAAGV,IAAI,CAACW,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,YAAY,CAAC;MAC5DT,SAAS,CAACO,UAAU,GAAG,uBAAuB,GAAG,eAAe,CAAC;MACjEH,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACrBF,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;EAGC,oBACEV,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MACEmB,GAAG,EAAIC,IAAK;MACZC,GAAG,EAAC,OAAO;MACXC,SAAS,EAAE,QAAQb,UAAU,GAAG,MAAM,GAAG,EAAE;IAAG;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACA1B,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1B,OAAA;MAAO2B,WAAW,EAAC,SAAS;MAACC,QAAQ,EAAGC,CAAC,IAAKzB,UAAU,CAACyB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5E1B,OAAA;MAAU2B,WAAW,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKvB,OAAO,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzE1B,OAAA;MAAQgC,OAAO,EAAEnB,UAAW;MAAAK,QAAA,EAAC;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChD1B,OAAA;MAAAkB,QAAA,EAAIX;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnCID,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}